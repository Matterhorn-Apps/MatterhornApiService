/*
 * Matterhorn API
 *
 * Draft spec for the Matterhorn POC
 *
 * API version: 0.1.0
 * Contact: ozinoveva@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A GoalsApiController binds http requests to an api service and writes the service results to the http response
type GoalsApiController struct {
	service GoalsApiServicer
}

// NewGoalsApiController creates a default api controller
func NewGoalsApiController(s GoalsApiServicer) Router {
	return &GoalsApiController{service: s}
}

// Routes returns all of the api route for the GoalsApiController
func (c *GoalsApiController) Routes() Routes {
	return Routes{
		{
			"GetCalorieGoal",
			strings.ToUpper("Get"),
			"/user/{userId}/calorieGoal",
			c.GetCalorieGoal,
		},
		{
			"PutCalorieGoal",
			strings.ToUpper("Put"),
			"/user/{userId}/calorieGoal",
			c.PutCalorieGoal,
		},
	}
}

// GetCalorieGoal - Get the calorie goal for the user
func (c *GoalsApiController) GetCalorieGoal(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	userId, err := parseIntParameter(params["userId"])
	if err != nil {
		// Bad Request
		w.WriteHeader(400)
		return
	}

	result, status, err := c.service.GetCalorieGoal(userId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, status, w)
}

// PutCalorieGoal - Update the calorie goal for the user
func (c *GoalsApiController) PutCalorieGoal(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	userId, err := parseIntParameter(params["userId"])
	if err != nil {
		w.WriteHeader(500)
		return
	}

	calorieGoal := &CalorieGoal{}
	if err := json.NewDecoder(r.Body).Decode(&calorieGoal); err != nil {
		w.WriteHeader(500)
		return
	}

	result, status, err := c.service.PutCalorieGoal(userId, *calorieGoal)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, status, w)
}
