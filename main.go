/*
 * Matterhorn API
 *
 * Draft spec for the Matterhorn POC
 *
 * API version: 0.1.0
 * Contact: ozinoveva@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	database "github.com/Matterhorn-Apps/MatterhornApiService/database"
	environment "github.com/Matterhorn-Apps/MatterhornApiService/environment"
	openapi "github.com/Matterhorn-Apps/MatterhornApiService/go"
)

func main() {
	log.Printf("Server started")

	// Load environment variables
	environment.LoadEnv(".")

	// Connect to database
	db, err := database.DbConnect()
	if err != nil {
		log.Fatalf("Failed to connect to database: %v", err)
	}
	defer db.Close()

	// Migrate database if necessary
	database.Migrate(db)

	CountersApiService := openapi.NewCountersApiService(db)
	CountersApiController := openapi.NewCountersApiController(CountersApiService)

	ExerciseApiService := openapi.NewExerciseApiService(db)
	ExerciseApiController := openapi.NewExerciseApiController(ExerciseApiService)

	FoodApiService := openapi.NewFoodApiService(db)
	FoodApiController := openapi.NewFoodApiController(FoodApiService)

	GoalsApiService := openapi.NewGoalsApiService(db)
	GoalsApiController := openapi.NewGoalsApiController(GoalsApiService)

	MetricsApiService := openapi.NewMetricsApiService(db)
	MetricsApiController := openapi.NewMetricsApiController(MetricsApiService)

	router := openapi.NewRouter(CountersApiController, ExerciseApiController, FoodApiController, GoalsApiController, MetricsApiController)

	apiFs := http.FileServer(http.Dir("./api/"))
	router.PathPrefix("/api/").Handler(http.StripPrefix("/api/", apiFs))

	swaggerUiFs := http.FileServer(http.Dir("./swaggerui/"))
	router.PathPrefix("/swaggerui/").Handler(http.StripPrefix("/swaggerui/", swaggerUiFs))

	log.Fatal(http.ListenAndServe(":5000", router))
}
